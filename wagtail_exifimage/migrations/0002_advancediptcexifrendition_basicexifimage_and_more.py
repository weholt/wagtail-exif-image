# Generated by Django 4.1.8 on 2023-04-21 12:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import wagtail.fields
import wagtail.images.models
import wagtail.models.collections
import wagtail.search.index


class Migration(migrations.Migration):
    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        ("wagtailcore", "0083_workflowcontenttype"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("wagtail_exifimage", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdvancedIPTCExifRendition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filter_spec", models.CharField(db_index=True, max_length=255)),
                (
                    "file",
                    wagtail.images.models.WagtailImageField(
                        height_field="height",
                        upload_to=wagtail.images.models.get_rendition_upload_to,
                        width_field="width",
                    ),
                ),
                ("width", models.IntegerField(editable=False)),
                ("height", models.IntegerField(editable=False)),
                (
                    "focal_point_key",
                    models.CharField(
                        blank=True, default="", editable=False, max_length=16
                    ),
                ),
            ],
            bases=(wagtail.images.models.ImageFileMixin, models.Model),
        ),
        migrations.CreateModel(
            name="BasicExifImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "file",
                    wagtail.images.models.WagtailImageField(
                        height_field="height",
                        upload_to=wagtail.images.models.get_upload_to,
                        verbose_name="file",
                        width_field="width",
                    ),
                ),
                ("width", models.IntegerField(editable=False, verbose_name="width")),
                ("height", models.IntegerField(editable=False, verbose_name="height")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created at"
                    ),
                ),
                ("focal_point_x", models.PositiveIntegerField(blank=True, null=True)),
                ("focal_point_y", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "focal_point_width",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "focal_point_height",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("file_size", models.PositiveIntegerField(editable=False, null=True)),
                (
                    "file_hash",
                    models.CharField(
                        blank=True, db_index=True, editable=False, max_length=40
                    ),
                ),
                ("story", wagtail.fields.RichTextField(blank=True, null=True)),
                ("has_processed_metadata", models.BooleanField(default=False)),
                ("date_time_original", models.DateTimeField(blank=True, null=True)),
                ("aperture", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "focal_length",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("iso_rating", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "metering_mode",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "shutter_speed",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "camera_make",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "camera_model",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        default=wagtail.models.collections.get_root_collection_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.collection",
                        verbose_name="collection",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text=None,
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="tags",
                    ),
                ),
                (
                    "uploaded_by_user",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                wagtail.images.models.ImageFileMixin,
                wagtail.search.index.Indexed,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="AdvancedIPTCExifImage",
            fields=[
                (
                    "basicexifimage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtail_exifimage.basicexifimage",
                    ),
                ),
                ("by_line", models.CharField(blank=True, max_length=250, null=True)),
                ("caption", models.CharField(blank=True, max_length=250, null=True)),
                ("cateogry", models.CharField(blank=True, max_length=250, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "copyright_notice",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "country_iso_location_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "country_location_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("credit", models.CharField(blank=True, max_length=250, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=50, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.CharField(blank=True, max_length=100, null=True)),
                ("website", models.CharField(blank=True, max_length=100, null=True)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("headline", models.CharField(blank=True, max_length=100, null=True)),
                ("keywords", models.CharField(blank=True, max_length=250, null=True)),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("source", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "special_instructions",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtail_exifimage.basicexifimage",),
        ),
        migrations.RenameModel(
            old_name="ExifRendition",
            new_name="BasicExifRendition",
        ),
        migrations.DeleteModel(
            name="ExifImage",
        ),
        migrations.AlterField(
            model_name="basicexifrendition",
            name="image",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="renditions",
                to="wagtail_exifimage.basicexifimage",
            ),
        ),
        migrations.AddField(
            model_name="advancediptcexifrendition",
            name="image",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="advanced_renditions",
                to="wagtail_exifimage.advancediptcexifimage",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="advancediptcexifrendition",
            unique_together={("image", "filter_spec", "focal_point_key")},
        ),
    ]
